#!/usr/bin/env bash
#
# STACK.YAML UPDATE SCRIPT
#
# SCRIPT BEGINS

declare -r RED="${RED:-$(tput setaf 1)}"
declare -r GREEN="${GREEN:-$(tput setaf 2)}"
declare -r YELLOW="${YELLOW:-$(tput setaf 3)}"
declare -r BOLD="${BOLD:-$(tput bold)}"
declare -r RESET="${RESET:-$(tput sgr 0)}"

declare -r STACK="${STACK:-"${HOME}/.config/xmonad/stack.yaml"}"
declare -r CURRENT_XMONAD="$(awk '/xmonad[/]xmonad$/{getline;print $2}' "${STACK}")"
declare -r CURRENT_CONTRIB="$(awk '/xmonad[/]xmonad-contrib$/{getline;print $2}' "${STACK}")"
declare -r CURRENT_X11="$(awk '/xmonad[/]x11$/{getline;print $2}' "${STACK}")"

function main() {
    # Instantiating our local variable.
    local COMMIT="${COMMIT:-}"
    # Assigning our first value to that variable, in 
    # this case, XMonads latest commit.
    COMMIT="$(git ls-remote https://github.com/xmonad/xmonad.git HEAD)"
    # Declaring that our value 'LATEST_XMONAD' is the 
    # output of 'COMMIT', but substituted to replace 
    # 'HEAD' with nothing. 
    declare -r LATEST_XMONAD="${COMMIT/	HEAD/}"
    # Assigning XMonad Contribs latest commit
    # to our local 'COMMIT' variable.
    COMMIT="$(git ls-remote https://github.com/xmonad/xmonad-contrib.git HEAD)"
    # Declaring that our value 'LATEST_CONTRIB' is the
    # output of 'COMMIT', substituted the same as before.
    declare -r LATEST_CONTRIB="${COMMIT/	HEAD/}"
    # Assigning the latest commit in XMonad's X11 
    # to the value in 'COMMIT'.
    COMMIT="$(git ls-remote https://github.com/xmonad/x11.git HEAD)"
    # Declaring that our value 'LATEST_X11' is the
    # output of 'COMMIT', substituted the same as before.
    declare -r LATEST_X11="${COMMIT/	HEAD/}"

    if [[ "${LATEST_XMONAD}" != "${CURRENT_XMONAD}" ]] ; then
        sed -i "s/${CURRENT_XMONAD}/${LATEST_XMONAD}/" "${STACK}"
        format "Updated XMonad to commit ${RESET}${BOLD}${LATEST_XMONAD}${RESET}${YELLOW}..."
    fi

    if [[ "${LATEST_CONTRIB}" != "${CURRENT_CONTRIB}" ]] ; then
        sed -i "s/${CURRENT_CONTRIB}/${LATEST_CONTRIB}/" "${STACK}"
        format "Updated XMonad Contrib to commit ${RESET}${BOLD}${LATEST_CONTRIB}${RESET}${YELLOW}..."
    fi

    if [[ "${LATEST_X11}" != "${CURRENT_X11}" ]] ; then
        sed -i "s/${CURRENT_X11}/${LATEST_X11}/" "${STACK}"
        format "Updated X11 to commit ${RESET}${BOLD}${LATEST_X11}${RESET}${YELLOW}..."
    fi
}

format() {
    # Outputs as a green "* " and follows with a yellow body.
    printf "${BOLD}${GREEN} * SUCCESS ${RESET}${YELLOW}%s\n${RESET}" "${*}" 2>&1
}

main "${@}"
